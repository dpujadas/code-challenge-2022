version: "3.5"
services:

  nginx:
    build: ./nginx
    image: code-challenge-2022/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      - ./html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    image: code-challenge-2022/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    image: code-challenge-2022/cron
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped

  server:
    build:
      context: .
    image: "code-challenge-2022/server"
    restart: "always"
    # container_name: "docker_server"
    volumes:
      - "../.:/var/www/html"
    depends_on:
      - "mysql"
    networks:
      - "network"

  mysql:
    image: "mysql:5.7"
    restart: "always"
    container_name: "docker_mysql"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "cc18_db"
      MYSQL_USER: "cc18_user"
      MYSQL_PASSWORD: "cc18_pass"
    volumes:
      - "../var/docker/mysql:/var/lib/mysql"
    networks:
      - "network"

  rabbitmq:
    container_name: "docker_rabbitmq"
    volumes:
      - "../var/docker/rabbitmq:/var/lib/rabbitmq"
    networks:
      - "network"

networks:
  network:
    driver: "bridge"
    name: "network"

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
